# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker Github Package

on:
  release:
    types: [published]
  workflow_dispatch: # 👉 수동 실행도 가능하게 추가

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      # ✅ 1. 코드 체크아웃
      - name: Check out the repo
        uses: actions/checkout@v3

      # ✅ 2. GHCR에 로그인
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ✅ 3. Docker 메타데이터 추출
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ github.event.release.tag_name }}

      # ✅ 4. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # ✅ 5. Trivy를 사용한 보안 취약점 스캔
      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
          format: 'table'
          exit-code: 0  # 필요 시 1로 바꿔서 취약점 있으면 빌드 실패 처리 가능
